{
  "questions": [
    {
      "id": "js-easy-1",
      "question": "Which of the following is the correct way to declare a variable in JavaScript?",
      "options": ["variable x = 5;", "var x = 5;", "v x = 5;", "let x = 5;"],
      "correctAnswers": ["var x = 5;", "let x = 5;"],
      "type": "multiple",
      "explanation": "In JavaScript, you can declare variables using 'var' or 'let'. 'var' is the older way, while 'let' is the modern way introduced in ES6."
    },
    {
      "id": "js-easy-2",
      "question": "What is the output of console.log(typeof [])?",
      "options": ["array", "object", "undefined", "null"],
      "correctAnswers": ["object"],
      "type": "single",
      "explanation": "In JavaScript, arrays are objects. The typeof operator returns 'object' for arrays."
    },
    {
      "id": "js-easy-3",
      "question": "Which of these is NOT a JavaScript data type?",
      "options": ["String", "Boolean", "Integer", "Object"],
      "correctAnswers": ["Integer"],
      "type": "single",
      "explanation": "JavaScript has Number type which includes both integers and floating-point numbers, but there is no separate Integer type."
    },
    {
      "id": "js-easy-4",
      "question": "What is the correct way to create an object in JavaScript?",
      "options": [
        "let obj = {};",
        "let obj = new Object();",
        "let obj = Object.create(null);",
        "All of the above"
      ],
      "correctAnswers": ["All of the above"],
      "type": "multiple",
      "explanation": "All of these are valid ways to create an object in JavaScript. The object literal syntax ({}) is the most common, but Object constructor and Object.create() are also valid methods."
    }
  ]
}
